# Use official Node.js 20 Alpine image
FROM node:20-alpine

# Set environment variables
ENV PLAYWRIGHT_BROWSERS_PATH=/ms-playwright
ENV DISPLAY=:99
ENV PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=0
ENV NODE_TLS_REJECT_UNAUTHORIZED=0

# Working directory
WORKDIR /app

# Install system dependencies for Playwright on Alpine
# Includes common libs, fonts, xvfb, utils, and dos2unix
RUN apk add --no-cache \
    udev \
    ttf-freefont \
    fontconfig \
    nss \
    freetype \
    harfbuzz \
    ca-certificates \
    dbus \
    libstdc++ \
    libx11 \
    libxcomposite \
    libxcursor \
    libxdamage \
    libxext \
    libxfixes \
    libxi \
    libxrandr \
    libxrender \
    libxtst \
    libgcc \
    xvfb \
    wget \
    curl \
    unzip \
    dos2unix

# Verify Node.js and npm versions from base image
RUN echo "VERIFY: Node version: $(node -v)" \
    && echo "VERIFY: npm version: $(npm -v)"

# Install Playwright without browser auto-download
# Using --no-optional as it sometimes helps on Alpine
RUN npm init -y \
    && npm install --no-optional playwright@1.42.0

# Download and install Chromium manually (avoids Alpine package issues)
RUN mkdir -p /ms-playwright/chromium-1105 \
    && cd /ms-playwright/chromium-1105 \
    && curl -fsSL -o chromium-linux.zip https://playwright.azureedge.net/builds/chromium/1105/chromium-linux.zip \
    && unzip -q chromium-linux.zip \
    && rm -f chromium-linux.zip \
    && chmod -R +x ./chrome-linux

# Set up Xvfb for headless browser and ensure correct line endings
RUN echo '#!/bin/sh' > /app/start-xvfb.sh \
    && echo 'Xvfb :99 -screen 0 1280x1024x24 &' >> /app/start-xvfb.sh \
    && chmod +x /app/start-xvfb.sh \
    && dos2unix /app/start-xvfb.sh

# Create a script to start the Playwright server and ensure correct line endings
# Using #!/bin/sh for better Alpine compatibility
RUN echo '#!/bin/sh' > /app/start-playwright-server.sh \
    && echo 'sh /app/start-xvfb.sh' >> /app/start-playwright-server.sh \
    && echo 'echo "Starting Playwright server on port 9222..."' >> /app/start-playwright-server.sh \
    && echo 'cd /app' >> /app/start-playwright-server.sh \
    && echo 'npx playwright@1.42.0 run-server --port=9222 --host=0.0.0.0' >> /app/start-playwright-server.sh \
    && chmod +x /app/start-playwright-server.sh \
    && dos2unix /app/start-playwright-server.sh

# Create directory for screenshots
RUN mkdir -p /app/screenshots \
    && chmod 777 /app/screenshots

# Expose port for Playwright server
EXPOSE 9222

# Command to start the Playwright server using sh for Alpine
CMD ["/bin/sh", "/app/start-playwright-server.sh"] 